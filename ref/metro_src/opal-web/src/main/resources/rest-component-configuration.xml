<?xml version="1.0" encoding="UTF-8"?>

<component-configuration
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://tis.co.jp/nablarch/component-configuration"
    xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration  /component-configuration.xsd">

  <!-- テーブル定義 -->
  <import file="nablarch/schema-config.xml" />

  <!-- 精査に使用する文字集合定義 -->
  <import file="common/charset-definition.xml" />

  <!-- メッセージ定義 -->
  <import file="common/message.xml" />

  <!-- 採番機能 -->
  <import file="common/idGenerator.xml" />

  <!-- パスワードハッシュ化 -->
 <import file="common/encryptor.xml"/>

  <!-- コード設定 -->
  <import file="common/code.xml" />

  <!-- DomainManager 実装クラス設定 -->
  <component name="domainManager" class="jp.co.tis.opal.common.domain.DomainManagers"/>
  <component name="constraintViolationConverterFactory" class="nablarch.core.validation.ee.ItemNamedConstraintViolationConverterFactory" />

  <!-- BeanValidation実装クラス -->
  <component name="validationStrategy" class="nablarch.common.web.validator.BeanValidationStrategy" />

  <!-- リクエストID短縮抽出機能 -->
  <component name="requestIdExtractor" class="nablarch.common.util.ShortRequestIdExtractor"/>

  <!-- 共通設定ファイル -->
  <config-file file="common.config" />
  <!-- REST設定ファイル -->
  <config-file file="application/rest.config" />
  <!-- 業務共通設定ファイル -->
  <config-file file="application/opal.config" />
  <!-- WebAPI専用設定ファイル -->
  <config-file file="application/opalWebApi.config" />
  <!-- 環境設定ファイル -->
  <config-file file="env.config" />
  <!-- 現在日時設定ハンドラで使用する。 -->
  <import file="nablarch/core/date/system-date.xml"/>
  <!-- データベース設定 -->
  <import file="db.xml" />

  <!--パッケージマッピングの設定 -->
  <component name="packageMapping" class="nablarch.integration.router.RoutesMapping">
    <property name="basePackage" value="${nablarch.commonProperty.basePackage}" />
    <property name="methodBinderFactory">
      <component class="nablarch.fw.jaxrs.JaxRsMethodBinderFactory">
       <property name="handlerList">
       	<component class="nablarch.integration.jaxrs.jersey.JerseyJaxRsHandlerListFactory"/>
       	</property>
       </component>
    </property>
  </component>

  <!-- JAX-RSレスポンスハンドラ -->
  <component name="jaxRsResponseHandler" class="nablarch.fw.jaxrs.JaxRsResponseHandler">
   <property name="errorResponseBuilder">
   	  <!-- 例外及びエラーに応じたレスポンスの生成 -->
      <component class="jp.co.tis.opal.web.common.error.APIErrorResponseBuilder" />
    </property>
    <property name="errorLogWriter">
      <!-- 例外及びエラーに応じたログ出力 -->
      <component class="jp.co.tis.opal.web.common.error.APIErrorLogWriter" />
    </property>
  </component>

  <!-- スレッドコンテキスト変数設定ハンドラ -->
  <component name="opalThreadContextHandler" class="nablarch.common.handler.threadcontext.ThreadContextHandler">
  	<property name="attributes">
  		<list>
  			<!-- スレッドコンテキストに保持する実行時ID -->
  			<component class="nablarch.common.handler.threadcontext.ExecutionIdAttribute" />
	        <!-- ユーザID -->
	        <component class="nablarch.common.handler.threadcontext.UserIdAttribute">
	          <property name="sessionKey"  value="user.id" />
	          <property name="anonymousId" value="guest" />
	        </component>
  			<!-- リクエストID -->
  			<component class="jp.co.tis.opal.web.common.handler.ThreadContext.OpalRequestIdAttribute" />
  			<!-- 要求電文共通部 -->
  			<component class="jp.co.tis.opal.web.common.handler.ThreadContext.OpalControlDataAttribute" />
  		</list>
  	</property>
  </component>

   <!-- OPALサービス提供可否チェックハンドラ -->
   <component name="opalServiceAvailabilityCheckHandler" class="jp.co.tis.opal.web.common.handler.OpalServiceAvailabilityCheckHandler">
      <property name="ServiceAvailability">
		  <component class="nablarch.common.availability.BasicServiceAvailability">
			  <property name="tableName" value="REQUEST"/>
			  <property name="requestTableRequestIdColumnName" value="REQUEST_ID"/>
			  <property name="requestTableServiceAvailableColumnName" value="SERVICE_AVAILABLE"/>
			  <property name="requestTableServiceAvailableOkStatus" value="1"/>
			  <property name="dbManager">
			      <component class="nablarch.core.db.transaction.SimpleDbTransactionManager">
			          <property name="dbTransactionName" value="generator" />
			      </component>
		      </property>
	      </component>
      </property>
   </component>

   <!-- OPAL再送電文制御ハンドラ -->
   <component name="opalMessageResendHandler" class="jp.co.tis.opal.web.common.handler.OpalMessageResendHandler">
	 <property name="tableName" value="RESPONSE_MESSAGE"/>
	 <property name="requestId" value="REQUEST_ID"/>
	 <property name="messageId" value="MESSAGE_ID"/>
	 <property name="statusCode" value="PROCESS_RESULT_CODE"/>
	 <property name="headData" value="MESSAGE_HEAD"/>
	 <property name="bodyData" value="MESSAGE_BODY"/>
	 <property name="deletedDate" value="DELETED_DATE"/>
	 <!-- # 再送信ハンドラ制御対象リクエスト -->
	 <property name="resendAPIList"  value="RA111A0310,RA111A0410,RA112A0110,RA113A0210,RA115A0110,
						RA116A0110,RA116A0210,RA116A0310,RA121A0210,RA123A0110,
						RA123A0310,RA134A0110,RA134A0210,RA142A0110">
	 </property>
   </component>


  <!-- ハンドラキュー構成 -->
  <component name="webFrontController" class="jp.co.tis.opal.web.common.handler.OpalWebFrontController">
    <property name="handlerQueue">
      <list>
      	<!-- HTTP文字エンコード制御ハンドラ -->
        <component class="nablarch.fw.web.handler.HttpCharacterEncodingHandler"/>

		<!-- グローバルエラーハンドラ -->
        <component class="nablarch.fw.handler.GlobalErrorHandler"/>

		<!-- JAX-RSレスポンスハンドラ -->
		<component-ref name="jaxRsResponseHandler"/>

        <!-- スレッドコンテキスト変数設定ハンドラ -->
        <component-ref name="opalThreadContextHandler"/>

        <!-- OPALHTTPアクセスログハンドラ -->
        <component class="jp.co.tis.opal.web.common.handler.OpalWebHttpAccessLogHandler"/>

        <!-- データベース接続管理ハンドラ -->
        <component-ref name="dbConnectionManagementHandler"/>

        <!-- トランザクション制御ハンドラ -->
        <component-ref name="transactionManagementHandler"/>

        <!-- OPALサービス提供可否チェックハンドラ -->
        <component-ref name="opalServiceAvailabilityCheckHandler"/>

		<!-- OPAL再送電文制御ハンドラ -->
		<component-ref name="opalMessageResendHandler"/>

    	<!-- パッケージマッピング -->
       	<component-ref name="packageMapping" />
      </list>
    </property>
  </component>

  <!-- 初期化が必要なコンポーネント -->
  <component name="initializer" class="nablarch.core.repository.initialization.BasicApplicationInitializer">
    <property name="initializeList">
      <list>
       <!-- パッケージマッピング -->
        <component-ref name="packageMapping" />
        <!-- コードのローダ -->
        <component-ref name="codeLoader" />
        <!-- コードのキャッシュ -->
        <component-ref name="codeCache" />
        <!-- message.xml:文字列リソースのキャッシュ -->
        <component-ref name="stringResourceCache" />
      </list>
    </property>
  </component>

</component-configuration>
