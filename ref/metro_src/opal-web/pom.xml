<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.nablarch.archetype</groupId>
    <artifactId>nablarch-archetype-parent</artifactId>
    <version>5u8</version>
  </parent>

  <artifactId>opal-web</artifactId>

  <groupId>jp.co.tis.opal</groupId>
  <version>1.0</version>
  <packaging>war</packaging>

  <properties>
    <!-- ソース及びclassファイルが準拠するJavaのバージョン-->
    <java.version>1.8</java.version>

    <!-- 環境ごとのリソースディレクトリ(プロファイルにより切り替わる) -->
    <env.resources>${project.basedir}/src/env/${env.dir}/resources</env.resources>

    <!-- toolsディレクトリへのパス -->
    <nablarch.tools.dir>${project.basedir}/tools</nablarch.tools.dir>

    <!-- 使用不許可APIチェックツールを含めたFindBugsの設定 -->
    <findbugs.report.dir>${project.build.directory}/findbugs</findbugs.report.dir>
    <findbugs.report.file.production>findbugs-production.xml</findbugs.report.file.production>
    <findbugs.report.file.test>findbugs-test.xml</findbugs.report.file.test>
    <findbugs.config.dir>${nablarch.tools.dir}/static-analysis/findbugs</findbugs.config.dir>
    <findbugs.config.filter.production>${findbugs.config.dir}/findbugs-exclude-for-production.xml</findbugs.config.filter.production>
    <findbugs.config.filter.test>${findbugs.config.dir}/findbugs-include-for-test.xml</findbugs.config.filter.test>
    <findbugs.config.published.production>${findbugs.config.dir}/published-config/production</findbugs.config.published.production>
    <findbugs.config.published.test>${findbugs.config.dir}/published-config/test</findbugs.config.published.test>
  </properties>

  <!--
    このプロファイルは環境を指定するものであり、相互に排他的である。
    複数のプロファイルを同時に指定してはならない。
  -->
  <profiles>
    <!-- 開発環境 -->
    <profile>
      <id>development</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <env.name>開発環境</env.name>
        <!-- Mavenの環境別リソースのディレクトリ名 -->
        <env.dir>dev</env.dir>
        <env.classifier>dev</env.classifier>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.nablarch.framework</groupId>
          <artifactId>nablarch-fw-web-hotdeploy</artifactId>
        </dependency>
        <!-- jdbc driver -->
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc7</artifactId>
          <version>12.1.0.2</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>
          <version>1.4</version>
          <scope>runtime</scope>
        </dependency>
	    <dependency>
	      <groupId>jp.co.tis.opal</groupId>
	      <artifactId>opal-testing-master</artifactId>
	      <version>1.0</version>
	      <scope>runtime</scope>
	    </dependency>
      </dependencies>
    </profile>

    <!-- 本番環境 -->
    <profile>
      <id>prod</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <env.name>本番環境</env.name>
        <env.dir>prod</env.dir>
        <env.classifier>prod</env.classifier>
      </properties>
    </profile>

    <!-- 結合試験環境 -->
    <profile>
      <id>it</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <env.name>結合試験環境</env.name>
        <env.dir>it</env.dir>
        <env.classifier>it</env.classifier>
      </properties>
    </profile>

  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.nablarch.profile</groupId>
        <artifactId>nablarch-bom</artifactId>
        <version>5u8</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <dependencies>
    <dependency>
      <groupId>com.nablarch.configuration</groupId>
      <artifactId>nablarch-main-default-configuration</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-testing</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.configuration</groupId>
      <artifactId>nablarch-testing-default-configuration</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.integration</groupId>
      <artifactId>nablarch-jersey-adaptor</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.integration</groupId>
      <artifactId>nablarch-router-adaptor</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-web</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-core-beans</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.7.2</version>
    </dependency>

    <!-- verifyフェーズでAnt経由でfindbugsを実行する際に使用する -->
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>findbugs</artifactId>
      <version>3.0.1</version>
      <scope>test</scope>
    </dependency>

	    <!-- opal -->
	    <dependency>
	      <groupId>jp.co.tis.opal</groupId>
	      <artifactId>opal-common</artifactId>
	      <version>1.0</version>
	    </dependency>
	    <dependency>
	      <groupId>jp.co.tis.opal</groupId>
	      <artifactId>opal-testing-master</artifactId>
	      <version>1.0</version>
	      <scope>test</scope>
	    </dependency>

    <!-- リクエスト単位でサービス提供可否をチェックすることができる -->
    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-auth</artifactId>
    </dependency>
    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-auth-jdbc</artifactId>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${env.resources}</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.sql</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <useManifestOnlyJar>false</useManifestOnlyJar>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.unit8.waitt</groupId>
        <artifactId>waitt-maven-plugin</artifactId>
        <version>1.1.0</version>
        <configuration>
          <port>9080</port>
          <servers>
            <server>
              <groupId>net.unit8.waitt.server</groupId>
              <artifactId>waitt-tomcat8</artifactId>
              <version>0.1.0</version>
            </server>
          </servers>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webXml>${webxml.path}</webXml>
          <classifier>${env.classifier}</classifier>
          <archive>
            <manifestEntries>
              <Target-Environment>${env.name}</Target-Environment>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!-- ant経由で各種ツールを起動する。実行対象のツールは、
      Findbugs、JSP静的解析ツール、使用許可API一覧作成ツールである -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!-- verifyフェーズでFindBugsチェックを実行する。 -->
            <!-- 5u9以降のnablarch-archetype-parentにはFindBugsに関する記述が除去されているため本pomに移植している。 -->
            <!--
               使用不許可APIチェックツールでのチェックを実施する。
               findbugs-maven-pluginでは、auxClasspathにtestスコープの依存ライブラリを追加することができないため、
               Antを利用してチェックタスクを実行する設定にしている。
            -->
            <id>verify-code-with-findbugs</id>
            <phase>verify</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <ant antfile="${nablarch.tools.dir}/nablarch-findbugs.xml" dir="${nablarch.tools.dir}" inheritRefs="true">
                  <target name="findbugs" />
                </ant>
              </target>
            </configuration>
          </execution>
          <execution>
            <!-- JSP静的解析ツールは必要ないため、実行しないように設定を上書きする。 -->
            <id>verify-jsp</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Check Style実行 -->
      <!-- 5u9以降のnablarch-archetype-parentにはCheck Styleに関する記述が除去されているため本pomに移植している。 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <failOnViolation>false</failOnViolation>
          <configLocation>${nablarch.tools.dir}/static-analysis/checkstyle/nablarch-checkstyle.xml</configLocation>
        </configuration>
        <executions>
          <execution>
            <id>validate-code-with-checkstyle</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- カバレッジ取得 -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
